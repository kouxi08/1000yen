openapi: 3.0.0
info:
  title: ホントくんAPI
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: ローカル開発環境
  - url: https://hontokun-backend.kouxi.jp
    description: 本番環境
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWTを使用した認証を行います。`Authorization`ヘッダーに`Bearer`スキームでトークンを含めてください。
  schemas:
    UserId:
      type: object
      properties:
        user_id:
          type: string
          description: ユーザーID
    UserProfile:
      type: object
      properties:
        nickname:
          type: string
          description: ユーザー名
        birthday:
          type: string
          format: date
          description: ユーザーの誕生日(YYYY-MM-DD)
      required:
        - name
paths:
  /sign_up:
    post:
      tags:
        - auth
      summary: 新規登録
      description: ユーザーを新規登録する
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserProfile"
      responses:
        "200":
          description: 登録成功
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/UserId"
                  - $ref: "#/components/schemas/UserProfile"
        "401":
          description: 登録失敗
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: エラーメッセージ
  /profile:
    get:
      tags:
        - profile
      summary: ユーザプロフィール取得
      description: ユーザーのプロフィールを取得する
      parameters: []
      responses:
        "200":
          description: プロフィール取得成功
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/UserId"
                  - $ref: "#/components/schemas/UserProfile"
                  - type: object
                    properties:
                      message:
                        type: string
                        description: プロフィール取得に成功した場合に返されるメッセージ
        "401":
          description: プロフィール取得失敗
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: エラーメッセージ
      security:
        - bearerAuth: []
    put:
      tags:
        - profile
      summary: ユーザプロフィール更新
      description: ユーザーのプロフィールを更新する
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserProfile"
      responses:
        "200":
          description: プロフィール更新成功
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/UserId"
                  - $ref: "#/components/schemas/UserProfile"
                  - type: object
                    properties:
                      message:
                        type: string
                        description: プロフィール更新に成功した場合に返されるメッセージ
        "401":
          description: プロフィール更新失敗
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: エラーメッセージ
      security:
        - bearerAuth: []
