openapi: 3.0.0
info:
  title: ホントくんAPI
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: ローカル開発環境
  - url: https://hontokun-backend.kouxi.jp
    description: 本番環境
components:
  securitySchemes:
    firebase:
      type: apiKey
      in: header
      name: Authorization
      description: Firebaseのトークンを指定してください
  schemas:
    TokenRequest:
      type: object
      properties:
        token:
          type: string
          description: Firebaseのトークン
        provider:
          type: string
          enum: [email, google]
    UserId:
      type: object
      properties:
        user_id:
          type: string
          description: ユーザーID
    UserEmail:
      type: object
      properties:
        email:
          type: string
          format: email
          description: ユーザーのメールアドレス
    UserPassword:
      type: object
      properties:
        password:
          type: string
          description: ユーザーのパスワード
    UserProfile:
      allOf:
        - $ref: "#/components/schemas/UserId"
        - type: object
          properties:
            name:
              type: string
              description: ユーザー名
            birthday:
              type: string
              format: date
              description: ユーザーの誕生日(YYYY-MM-DD)
          required:
            - name
paths:
  /sign_up:
    post:
      tags:
        - auth
      summary: 新規登録
      description: ユーザーを新規登録する
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/UserId"
                - $ref: "#/components/schemas/UserPassword"
                - $ref: "#/components/schemas/TokenRequest"
                - $ref: "#/components/schemas/UserProfile"
      responses:
        "200":
          description: 登録成功
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/UserId"
                  - $ref: "#/components/schemas/TokenRequest"
        "401":
          description: 登録失敗
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: エラーメッセージ
  /sign_in:
    post:
      tags:
        - auth
      summary: ログイン
      description: Firebaseのトークンを受け取り、ユーザーを認証する
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/TokenRequest"
                - $ref: "#/components/schemas/UserId"
                - $ref: "#/components/schemas/UserEmail"
                - $ref: "#/components/schemas/UserPassword"
      responses:
        "200":
          description: ログイン成功
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/UserId"
                  - $ref: "#/components/schemas/TokenRequest"
        "401":
          description: 認証失敗
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: エラーメッセージ
  /sign_out:
    post:
      tags:
        - auth
      summary: ログアウト
      description: ログアウトする
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/UserId"
                - $ref: "#/components/schemas/TokenRequest"
      responses:
        "200":
          description: ログアウト成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: ログアウトに成功した場合に返されるメッセージ
        "401":
          description: ログアウト失敗
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: エラーメッセージ
      security:
        - firebase: []
  /profile:
    get:
      tags:
        - profile
      summary: ユーザプロフィール取得
      description: ユーザーのプロフィールを取得する
      parameters: []
      responses:
        "200":
          description: プロフィール取得成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
        "401":
          description: プロフィール取得失敗
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: エラーメッセージ
      security:
        - firebase: []
    put:
      tags:
        - profile
      summary: ユーザプロフィール更新
      description: ユーザーのプロフィールを更新する
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/TokenRequest"
                - $ref: "#/components/schemas/UserProfile"
      responses:
        "200":
          description: プロフィール更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: プロフィール更新に成功した場合に返されるメッセージ
        "401":
          description: プロフィール更新失敗
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: エラーメッセージ
      security:
        - firebase: []
