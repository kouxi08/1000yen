openapi: 3.0.0
info:
  title: ホントくんAPI
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: ローカル開発環境
  - url: https://hontokun-backend.kouxi.jp
    description: 本番環境
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWTを使用した認証を行います。`Authorization`ヘッダーに`Bearer`スキームでトークンを含めてください。
  schemas:
    UserId:
      type: object
      properties:
        user_id:
          type: string
          description: ユーザーID
    UserProfile:
      type: object
      properties:
        nickname:
          type: string
          description: ユーザー名
        birthday:
          type: string
          format: date
          description: ユーザーの誕生日(YYYY-MM-DD)
      required:
        - name
    UserStatus:
      type: object
      properties:
        level:
          type: integer
          description: ユーザーのレベル
        experience:
          type: integer
          description: ユーザーの経験値
    CharacterImage:
      type: object
      properties:
        character_image_id:
          type: string
          description: ユーザーの着せ替え画像のID
    CharacterImages:
      type: object
      properties:
        character_image_id_list:
          type: array
          items:
            type: string
          description: ユーザーの着せ替え画像のIDの配列
    CharacterDialogue:
      type: object
      properties:
        character_dialogue:
          type: string
          description: キャラクターのセリフ
paths:
  /sign_up:
    post:
      tags:
        - auth
      summary: 新規登録
      description: ユーザーを新規登録する
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserProfile"
      responses:
        "200":
          description: 登録成功
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/UserId"
                  - $ref: "#/components/schemas/UserProfile"
        "401":
          description: 登録失敗
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: エラーメッセージ
  /home:
    get:
      tags:
        - home
      summary: ホーム画面でのデータ取得
      description: ユーザ情報を取得する
      parameters: []
      responses:
        "200":
          description: ホーム画面データ取得成功
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/UserId"
                  - $ref: "#/components/schemas/UserProfile"
                  - $ref: "#/components/schemas/UserStatus"
                  - $ref: "#/components/schemas/CharacterImages"
                  - $ref: "#/components/schemas/CharacterDialogue"
                  - type: object
                    properties:
                      history:
                        type: object
                        properties:
                          total_accuracy:
                            type: number
                            format: double
                            description: ユーザーの総正答率
                          quiz_set_list:
                            type: array
                            description: クイズのセット別の一覧
                            items:
                              type: object
                              properties:
                                quiz_set_id:
                                  type: string
                                  description: クイズセットのID
                                quiz_set_difficulty:
                                  type: integer
                                  description: クイズの難易度
                                  example: 1
                                quiz_set_accuracy:
                                  type: number
                                  format: double
                                  description: クイズのセット別の正答率
                                  example: 0.67
                                answered_at:
                                  type: string
                                  format: date-time
                                  description: クイズを解いた日時
                                quiz_set:
                                  type: array
                                  description: クイズセットの問題一覧
                                  items:
                                    type: object
                                    properties:
                                      quiz_id:
                                        type: string
                                        description: クイズのID
                                      quiz_type:
                                        type: string
                                        description: クイズの出題形式（バトルかタイムアタックか）
                                        example: "battle"
                                      answer_time:
                                        type: integer
                                        nullable: true
                                        description: クイズを解いた時間(タイムアタックの場合・秒)
                                        example: 30
                                      is_correct:
                                        type: boolean
                                        description: クイズの正誤
                                      user_answer:
                                        type: string
                                        description: ユーザーの解答内容
                  - type: object
                    properties:
                      message:
                        type: string
                        description: プロフィール取得に成功した場合に返されるメッセージ
        "401":
          description: プロフィール取得失敗
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: エラーメッセージ
      security:
        - bearerAuth: []
  /profile:
    put:
      tags:
        - profile
      summary: ユーザプロフィール更新
      description: ユーザーのプロフィールを更新する
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/UserProfile"
                - $ref: "#/components/schemas/CharacterImage"
      responses:
        "200":
          description: プロフィール更新成功
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/UserId"
                  - $ref: "#/components/schemas/UserProfile"
                  - $ref: "#/components/schemas/CharacterImage"
                  - type: object
                    properties:
                      message:
                        type: string
                        description: プロフィール更新に成功した場合に返されるメッセージ
        "401":
          description: プロフィール更新失敗
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: エラーメッセージ
      security:
        - bearerAuth: []
