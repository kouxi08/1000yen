openapi: 3.0.0
info:
  title: ホントくんAPI
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: ローカル開発環境
  - url: https://hontokun-backend.kouxi.jp
    description: 本番環境
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWTを使用した認証を行います。`Authorization`ヘッダーに`Bearer`スキームでトークンを含めてください。
  schemas:
    UserId:
      type: object
      properties:
        id:
          type: string
          description: ユーザーID
    UserProfile:
      type: object
      properties:
        nickname:
          type: string
          description: ユーザー名
        birthday:
          type: string
          format: date
          description: ユーザーの誕生日(YYYY-MM-DD)
      required:
        - name
    UserStatus:
      type: object
      properties:
        level:
          type: integer
          description: ユーザーのレベル
        experience:
          type: integer
          description: ユーザーの経験値
    CharacterImageId:
      type: object
      properties:
        id:
          type: string
          description: ユーザーの着せ替え画像のID
    CharacterImageUrl:
      type: object
      properties:
        url:
          type: string
          description: ユーザーの着せ替え画像のURL
    CharacterImage:
      allOf:
        - $ref: "#/components/schemas/CharacterImageId"
        - $ref: "#/components/schemas/CharacterImageUrl"
    CharacterImageList:
      type: object
      properties:
        character_image_list:
          type: array
          items:
            $ref: "#/components/schemas/CharacterImage"
          description: ユーザーが所持する着せ替えの一覧（選択中は除く）
    CharacterDialogue:
      type: object
      properties:
        dialogue:
          type: string
          description: キャラクターのセリフ
    Quiz:
      type: object
      properties:
        quiz_id:
          type: string
          description: クイズのID
        news_title:
          type: string
          description: クイズのニュースのタイトル
        news_content:
          type: string
          description: クイズのニュースの内容
        news_image:
          type: string
          description: クイズのニュースの画像
        question:
          type: string
          description: クイズの問題文
        quiz_type:
          type: string
          enum:
            - "true_or_false"
            - "multiple_choice"
          description: クイズの問題タイプ（マルバツか選択式か）
        quiz_choices:
          type: array
          items:
            type: string
          description: クイズの選択肢
          nullable: true
        correct_answer:
          type: string
          description: クイズの正解
    QuizUserAnswer:
      type: object
      properties:
        answer_time:
          type: integer
          nullable: true
          description: クイズを解いた時間(タイムアタックの場合・秒)
        is_correct:
          type: boolean
          description: クイズの正誤
        user_answer:
          type: string
          description: ユーザーの解答内容
        explanation:
          type: string
          description: クイズの解説
    QuizSet:
      type: object
      properties:
        id:
          type: string
          description: クイズセットのID
        difficulty:
          type: integer
          description: クイズセットの難易度
        accuracy:
          type: number
          format: double
          description: クイズのセット別の正答率
        mode:
          type: string
          enum:
            - "battle"
            - "time_attack"
          description: クイズの出題形式（バトルかタイムアタックか）
paths:
  /sign_up:
    post:
      tags:
        - auth
      summary: 新規登録
      description: ユーザーを新規登録する
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserProfile"
      responses:
        "200":
          description: 登録成功
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/UserId"
                  - $ref: "#/components/schemas/UserProfile"
        "401":
          description: 登録失敗
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: エラーメッセージ
  /home:
    get:
      tags:
        - home
      summary: ホーム画面でのデータ取得
      description: ユーザのステータスや着せ替えを取得する
      parameters: []
      responses:
        "200":
          description: ホーム画面データ取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    allOf:
                      - $ref: "#/components/schemas/UserId"
                      - $ref: "#/components/schemas/UserProfile"
                      - $ref: "#/components/schemas/UserStatus"
                  character:
                    allOf:
                      - $ref: "#/components/schemas/CharacterDialogue"
                      - $ref: "#/components/schemas/CharacterImageUrl"
              # example:
              #   user_id: "1"
              #   nickname: "ホントくん"
              #   birthday: "2020-01-01"
              #   level: 2
              #   experience: 4
              #   character_image_url: "https://example.com/image1.jpg"
              #   character_dialogue: |
              #     ようこそ！
              #     $USER_NAME  探偵事務所へ
              #     僕は助手のホントくん
              #     よろしくね！"
        "401":
          description: プロフィール取得失敗
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: エラーメッセージ
      security:
        - bearerAuth: []
  /history:
    get:
      tags:
        - /history
      summary: クイズ履歴取得
      description: ユーザのクイズ履歴を取得する
      parameters: []
      responses:
        "200":
          description: クイズ履歴取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    allOf:
                      # ユーザのID, name, キャラクター
                      - $ref: "#/components/schemas/UserId"
                      - $ref: "#/components/schemas/UserProfile"
                      - type: object
                        properties:
                          character:
                            $ref: "#/components/schemas/CharacterImage"
                            description: ユーザの着せ替え画像
                    description: ユーザのステータス
                  history:
                    type: object
                    properties:
                      total_accuracy:
                        type: number
                        format: double
                        description: ユーザの総正答率
                      quiz_set:
                        type: array
                        description: クイズのセット別の一覧
                        items:
                          $ref: "#/components/schemas/QuizSet"

        "401":
          description: クイズ履歴取得失敗
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: エラーメッセージ
  /profile:
    put:
      tags:
        - profile
      summary: ユーザプロフィール更新
      description: ユーザーのプロフィールを更新する
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/UserProfile"
                - $ref: "#/components/schemas/CharacterImageId"
      responses:
        "200":
          description: プロフィール更新成功
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/UserId"
                  - $ref: "#/components/schemas/UserProfile"
                  - type: object
                    properties:
                      character_image:
                        $ref: "#/components/schemas/CharacterImage"
                      message:
                        type: string
                        description: プロフィール更新に成功した場合に返されるメッセージ
        "401":
          description: プロフィール更新失敗
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: エラーメッセージ
      security:
        - bearerAuth: []
  /quiz/{difficulty}:
    get:
      tags:
        - quiz
      summary: クイズの問題取得
      description: クイズの問題を難易度別で取得する
      parameters:
        - name: difficulty
          in: path
          required: true
          schema:
            type: integer
          description: クイズの難易度
      responses:
        "200":
          description: クイズ取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  character_image:
                    $ref: "#/components/schemas/CharacterImage"
                    description: ユーザーが選択中の着せ替え画像
                  quiz_set_list:
                    type: array
                    description: クイズのセット別の一覧
                    items:
                      allOf:
                        - $ref: "#/components/schemas/QuizSet"
                        - type: object
                          properties:
                            quiz_set:
                              type: array
                              description: クイズセットの問題一覧
                              items:
                                allOf:
                                  - $ref: "#/components/schemas/Quiz"
